/*
 * Observation.cpp
 *
 * (c) 2011 Sofian Audry -- info(@)sofianaudry(.)com
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "Observation.h"

#include <string.h>

Observation::Observation() : observations(0), dim(0), terminal(false), manageMemory(false) {}
Observation::Observation(unsigned int dim_, observation_t* assign_)
  : observations(0), dim(dim_), terminal(false), manageMemory(false) {
  init(dim_, assign_);
}

Observation::~Observation() {
  if (manageMemory)
    Alloc::free(observations);
}

void Observation::init(unsigned int dim_, observation_t* assign_) {
  assert (!observations); // already allocated
  assert (dim_); // dim > 0

  // Set dimension.
  dim = dim_;

  manageMemory = (assign_ == 0);

  // Allocate.
  if (manageMemory) {
    observations =  (observation_t*) Alloc::malloc(dim * sizeof(observation_t));
    memset(observations, 0, dim * sizeof(observation_t));
  }

  // Assign.
  else
    observations = assign_;
}
